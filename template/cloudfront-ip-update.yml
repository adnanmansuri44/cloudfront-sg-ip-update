AWSTemplateFormatVersion: "2010-09-09"
Description: "Create Security groups, tags, Lambda and IAM roles"
Parameters:
  vpc:
    Description: 'Select VPC for Security Group'
    Type: AWS::EC2::VPC::Id
  bucketname:
    Description: 'Enter the S3 bucket name which having code (Bucket must be in same region)'
    Type: String
    Default: ac-devops-solutions
  zipfilename:
    Description: 'Enter the zip file name inside the s3 bucket(File must be public)(Ex. file.zip)'
    Type: String
    Default: code.zip
Resources:
    ec2625d2d3:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "cloudfront_g-http"
            GroupName: "cloudfront_g-http"
            VpcId: !Ref vpc
            Tags:
                - Key: Name
                  Value: cloudfront_r
                - Key: Protocol
                  Value: http
                - Key: AutoUpdate
                  Value: true         
    ec27f041c0:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "cloudfront_g-https"
            GroupName: "cloudfront_g-https"
            VpcId: !Ref vpc
            Tags:
                - Key: Name
                  Value: cloudfront_r
                - Key: Protocol
                  Value: http
                - Key: AutoUpdate
                  Value: true 
    ec234b99cc:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "cloudfront_r-https"
            GroupName: "cloudfront_r-https"
            VpcId: !Ref vpc
            Tags:
                - Key: Name
                  Value: cloudfront_r
                - Key: Protocol
                  Value: http
                - Key: AutoUpdate
                  Value: true        

    ec2649a347:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "cloudfront_r-http"
            GroupName: "cloudfront_r-http"
            VpcId: !Ref vpc
            Tags:
                - Key: Name
                  Value: cloudfront_r
                - Key: Protocol
                  Value: http
                - Key: AutoUpdate
                  Value: true           
    iamb49732e:
        Type: "AWS::IAM::Role"
        Properties:
            RoleName: "update-sg-role"
            AssumeRolePolicyDocument: 
                Version: "2012-10-17"
                Statement: 
                  - 
                    Effect: "Allow"
                    Action: 
                      - "sts:AssumeRole"
                    Principal: 
                        Service: 
                          - "lambda.amazonaws.com"
            Policies:
            -
                PolicyName: "update-sg-policy"
                PolicyDocument: 
                    Version: "2012-10-17"
                    Statement: 
                    - 
                        Effect: "Allow"
                        Action: 
                        - "logs:CreateLogGroup"
                        - "logs:CreateLogStream"
                        - "logs:PutLogEvents"
                        Resource: "arn:aws:logs:*:*:*"
                    - 
                        Effect: "Allow"
                        Action: 
                        - "ec2:DescribeSecurityGroups"
                        - "ec2:AuthorizeSecurityGroupIngress"
                        - "ec2:RevokeSecurityGroupIngress"
                        Resource: "*"
    lambdaf942c03:
        DependsOn:
        - iamb49732e
        Type: "AWS::Lambda::Function"
        Properties:
            Code: 
                S3Bucket: !Ref bucketname
                S3Key: !Ref zipfilename
            Description: "Update Security Group"
            FunctionName: "update-sg"
            Handler: lambda_function.lambda_handler
            MemorySize: 1024
            Role: !GetAtt 'iamb49732e.Arn'
            Runtime: "python2.7"
            Timeout: 30
#    SecondaryNotificationsub:
#        DependsOn: 
#        - lambdaf942c03
#        Type: AWS::SNS::Subscription
#        Properties:
#            Endpoint: !GetAtt lambdaf942c03.Arn
#            Protocol: lambda
#            TopicArn: "arn:aws:sns:us-east-1:806199016981:AmazonIpSpaceChanged"
    SNSPermisiontocallLambda:
        Type: AWS::Lambda::Permission
        DependsOn:
        - lambdaf942c03
        Properties:
            FunctionName: !GetAtt lambdaf942c03.Arn
            Action: lambda:InvokeFunction
            Principal: sns.amazonaws.com            
